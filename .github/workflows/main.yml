# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    tags:
      - "*"
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: addnab/docker-run-action@v3
        with:
          image: archlinux:latest
          options: -v ${{ github.workspace }}:/build
          shell: bash
          run: |
            pacman -Syu --noconfirm python qt5-base libxcomposite gtk3 pango mpdecimal base-devel tk &&
            cd /build &&
            ls -al &&
            curl -sSL https://install.python-poetry.org | python3 - &&
            export PATH="/root/.local/bin:$PATH" &&
            poetry config virtualenvs.in-project true &&
            poetry update &&
            poetry install &&
            ls -l /build/.venv/bin/pyinstaller &&
            poetry run pyinstaller --clean --onefile --add-binary 'binaries/linux:.' migaku-player-converter.py


      - name: rename binary
        run: pwd && ls -la && ls -la dist && sudo mv dist/migaku-player-converter dist/migaku-player-converter-linux
      - name: release-linux
        uses: ncipollo/release-action@v1.8.9
        id: create_release
        with:
          draft: false
          allowUpdates: true
          artifacts: "dist/*"

        env:
          GITHUB_TOKEN: ${{ github.token }}
  build-mac:
    # The type of runner that the job will run on
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: curl -sSL https://install.python-poetry.org | python3 -
      - name: build project
        run: |
          export PATH="/Users/runner/.local/bin:$PATH"
          poetry config virtualenvs.in-project true
          poetry install
          poetry run pyinstaller --onefile --clean --windowed --add-binary 'binaries/mac:.' migaku-player-converter.py
      - name: Create release dir
        run: mkdir release
      - name: rename binary
        run: mv dist/migaku-player-converter release/migaku-player-converter-mac
      - name: rename binary
        run: mv dist/migaku-player-converter.app dist/migaku-player-converter-mac.app
      - name: Bundle dmg
        run: hdiutil create -volname migaku-player-converter -srcfolder dist/ -ov -format UDZO release/migaku-player-converter-mac.dmg
      - name: release-mac
        uses: ncipollo/release-action@v1.8.9
        id: create_release
        with:
          draft: false
          allowUpdates: true
          artifacts: "release/*"

  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -
      - name: build project
        run: |
          set PATH="%PATH%;C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry"
          py -0p
          C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry env info
          C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry config virtualenvs.in-project true
          C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry install
          C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry run pyinstaller --onefile --clean --add-binary 'binaries/windows;.' migaku-player-converter.py
      - name: release-windows
        uses: ncipollo/release-action@v1.8.9
        id: create_release
        with:
          draft: false
          allowUpdates: true
          artifacts: "dist/*"
